basePath: /api/v1/
definitions:
  service.CreateStatusParams:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  service.CreateStatusResponse:
    properties:
      id:
        type: integer
    type: object
  service.CreateTaskParams:
    properties:
      date:
        type: string
      description:
        type: string
      status_name:
        type: string
      title:
        type: string
    required:
    - date
    - description
    - status_name
    - title
    type: object
  service.CreateTaskResponse:
    properties:
      id:
        type: integer
    type: object
  service.GetTaskWithStatusNameModel:
    properties:
      created_at:
        type: string
      date:
        type: string
      deleted:
        type: boolean
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      status_name:
        type: string
      title:
        type: string
    type: object
  service.UpdateTaskByIDParams:
    properties:
      date:
        type: string
      description:
        type: string
      status_name:
        type: string
      title:
        type: string
    type: object
  v1.response:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
info:
  contact:
    name: API [Roman] Support
  description: Swagger API for Golang Project TODO.
  license:
    name: romandnk
    url: https://github.com/romandnk/todo
  termsOfService: http://swagger.io/terms/
  title: TODO App Swagger
  version: "1.0"
paths:
  /statuses/:
    post:
      description: Create new task status.
      parameters:
      - description: Required JSON body with status name
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/service.CreateStatusParams'
      responses:
        "200":
          description: Status was created successfully
          schema:
            $ref: '#/definitions/service.CreateStatusResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/v1.response'
      summary: CreateStatus
      tags:
      - Status
  /tasks/:
    post:
      description: Create new task.
      parameters:
      - description: Required JSON body with all required task field
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/service.CreateTaskParams'
      responses:
        "201":
          description: Task was created successfully
          schema:
            $ref: '#/definitions/service.CreateTaskResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/v1.response'
      summary: CreateTask
      tags:
      - Task
  /tasks/:id:
    delete:
      description: Delete task by its id.
      parameters:
      - description: Required task id for deleting
        in: path
        name: params
        required: true
        type: integer
      responses:
        "200":
          description: Task was deleted successfully
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/v1.response'
      summary: DeleteTaskByID
      tags:
      - Task
    get:
      description: Get task by its id.
      parameters:
      - description: Required task id for getting
        in: path
        name: params
        required: true
        type: integer
      responses:
        "200":
          description: Task was gotten successfully
          schema:
            $ref: '#/definitions/service.GetTaskWithStatusNameModel'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/v1.response'
      summary: GetTaskByID
      tags:
      - Task
    patch:
      description: Update task selected fields by its id.
      parameters:
      - description: Required task id for updating
        in: path
        name: params
        required: true
        type: integer
      - description: Required JSON body with necessary fields to update
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/service.UpdateTaskByIDParams'
      responses:
        "200":
          description: Task was updated successfully
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/v1.response'
      summary: UpdateTaskByID
      tags:
      - Task
swagger: "2.0"
